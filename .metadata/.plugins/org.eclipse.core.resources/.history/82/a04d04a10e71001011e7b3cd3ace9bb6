package com.example.controllers;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.example.entities.Manufacturer;
import com.example.entities.Model;
import com.example.entities.Segment;
import com.example.services.ManufacturerService;
import com.example.services.ModelService;
import com.example.services.SegmentService;

@RestController
@RequestMapping("/models")
public class ModelController {

    @Autowired
    private ModelService modelService;
    
    @Autowired
    private SegmentService segmentService;
    
    @Autowired
    private ManufacturerService manufacturerService;
    
    public ModelController(ModelService modelService) {
        this.modelService = modelService;
    }

    @GetMapping
    public List<Model> getAllModels() {
        return modelService.getAllModels();
    }

    @PostMapping
    public Model addModel(@RequestBody Model model) {
        return modelService.createModel(model);
    }
    @GetMapping("/by-segment/{segmentId}")
    public List<Model> getModelsBySegment(@PathVariable int segmentId) {
        Segment segment = segmentService.getSegmentById(segmentId);
        return modelService.getModelsBySegment(segment); 
    }
    
    @GetMapping("/by-segment/{segmentId}/manufacturer/{manufacturerId}")
    public List<Model> getModelsBySegmentAndManufacturer(@PathVariable int segmentId,
                                                        @PathVariable int manufacturerId) {
        Segment segment = segmentService.getSegmentById(segmentId);
        Manufacturer manufacturer = manufacturerService.getManufacturerById(manufacturerId);
        return modelService.getModelsByManufacturerAndSegment(manufacturer, segment);
    }
    // previous
    @GetMapping("/default/{modelId}")
    public Model getDefaultConfiguration(@PathVariable int modelId) {
        return modelService.getFullModelDetails(modelId);
    }
    
    @GetMapping("/default/{modelId}")
    public ResponseEntity<Model> getDefaultModelConfig(@PathVariable int modelId) {
        Model model = modelService.getModelWithDefaultConfig(modelId);
        return ResponseEntity.ok(model);
    }
    
}
